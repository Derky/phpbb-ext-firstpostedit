<?xml version="1.0" encoding="UTF-8"?>

<project name="gn36/firstpostedit" default="rebuild-archive">
	<property name="buildfolder" value="./build/" />
	<property name="extvendor" value="gn36" />
	<property name="extname" value="firstpostedit" />

	<!-- AUTO CONFIG from here on -->
	<property name="datadir" value="${buildfolder}data/" />
	<property name="dir" value="${datadir}${extvendor}/${extname}/" />
	<property name="zipfolder" value="${buildfolder}zip/" />
	
	<exec dir="${project.basedir}"
			command='php -r "\$j = json_decode(file_get_contents(\"composer.json\")); echo \$j->version;"'
			checkreturn="true"
			outputProperty='version' />
	
	<!-- ======== FILESETS ========= -->
	<fileset dir="${project.basedir}" id="extfiles">
		<include name="**/*.php" />
		<include name="**/*.yml" />
		<include name="language/**/*.txt" />
		<include name="composer.json" />
		<include name="license.txt" />
		<include name="README.md" />
		<include name="**/*.jpg" />
		<include name="**/*.jpeg" />
		<include name="**/*.gif" />
		<include name="**/*.png" />
		<include name="**/*.css" />
		<include name="**/*.html" />
		<include name="**/*.js" />
		<exclude name=".travis.yml" />
		<exclude name="tests/**" />
		<exclude name="travis/**" />
		<exclude name=".git/**" />
		<exclude name="build/**" />
		<exclude name="components/**" />
		<exclude name="vendor/moment/moment/src/**" />
		<exclude name="vendor/moment/moment/benchmarks/**" />
		<exclude name="vendor/moment/moment/scripts/**" />
		<exclude name="vendor/moment/moment/templates/**" />
		<exclude name="vendor/moment/moment/meteor/**" />
		<exclude name="vendor/moment/moment/tasks/**" />
		<exclude name="vendor/moment/moment/min/tests.js" />
		<exclude name="vendor/moment/moment/*.js" />
		<exclude name="vendor/moment/moment/*.yml" />
		<exclude name="vendor/components/**" />
		<exclude name="vendor/composer/**" />
		<exclude name="vendor/kriswallsmith/**" />
		<exclude name="vendor/robloach/**" />
		<exclude name="vendor/symfony/**" />
		<exclude name="vendor/autoload.php" />
		<include name="vendor/moment/moment/LICENSE" />
		<include name="vendor/eonasdan/bootstrap-datetimepicker/LICENSE" />
		<exclude name="vendor/eonasdan/bootstrap-datetimepicker/test/**" />
		<exclude name="vendor/eonasdan/bootstrap-datetimepicker/tasks/**" />
		<exclude name="vendor/eonasdan/bootstrap-datetimepicker/*.yml" />
		<exclude name="vendor/eonasdan/bootstrap-datetimepicker/Gruntfile.js" />
		<exclude name="vendor/eonasdan/bootstrap-datetimepicker/src/**" />
		<include name="vendor/fortawesome/font-awesome/README.md" />
		<include name="vendor/fortawesome/font-awesome/fonts/*" />
		<exclude name="vendor/fortawesome/font-awesome/src/**" />
		<exclude name="vendor/fortawesome/font-awesome/css/**" />
		<exclude name="vendor/fortawesome/font-awesome/less/**" />
		<exclude name="vendor/fortawesome/font-awesome/scss/**" />
		<exclude name="vendor/fortawesome/font-awesome/*.json" />
		<exclude name="vendor/fortawesome/font-awesome/*.yml" />
		<exclude name="vendor/fortawesome/font-awesome/Gemfile*" />
	</fileset>

	<!-- ============================================== -->
	<!-- ======== TARGETS ============================= -->
	<!-- ============================================== -->

	<!-- ======== PREPARE ========== -->
	<target name="prepare">
		<echo msg="creating build directory" />
		<mkdir dir="${buildfolder}" />
		<mkdir dir="${dir}" />
		<mkdir dir="${zipfolder}" />	
	</target>
	
	<!-- ======== BUILD ============= -->
	<target name="build" depends="prepare">
				
		<!-- Install composer dependencies, if there are any. -->
		<echo msg="install composer dependencies (only non-dev)" />
		<exec dir="${project.basedir}"
			command='php -r "\$j = json_decode(file_get_contents(\"composer.json\"), true); if (isset(\$j[\"require\"][\"php\"])) {unset(\$j[\"require\"][\"php\"]);} echo (count(\$j[\"require\"]));"'
			checkreturn="true"
			outputProperty='composer-has-dependencies' />
		<if>
			<!-- We want a >= compare here, but since that does not exist, simply use versioncompare... -->
			<equals arg1="${composer-has-dependencies}" arg2="0" trim="" />
			<then>
				<!-- We do not have composer dependencies, do not ship composer files -->
				<echo msg="No composer dependencies, skipping..." />
			</then>
			<else>
				<!-- We have non-dev composer dependencies -->
				<exec dir="${project.basedir}"
					command="php composer.phar install --no-dev --optimize-autoloader"
					checkreturn="true"
					passthru="true" />
				<delete file="${dir}/composer.phar" />
			</else>
		</if>

		<echo msg="copying files to build dir" />
		<copy todir="${dir}">
			<fileset refid="extfiles" />
		</copy>
	</target>
	
	<!-- ======= ARCHIVE ========== -->
	<target name="archive" depends="build">
		<zip destfile="${zipfolder}/${extvendor}-${extname}-${version}.zip" includeemptydirs="true" basedir="${datadir}" />
	</target>
	
	<!-- ======= REBUILD ========== -->
	<target name="rebuild">
		<delete dir="${buildfolder}/data" />
		<phingcall target="build" />
	</target>
	
	<!-- ======= REBUILD-ARCHIVE == -->
	<target name="rebuild-archive">
		<delete dir="${buildfolder}/data" />
		<delete file="${zipfolder}/${extvendor}-${extname}-${version}.zip" />
		<phingcall target="archive" />
	</target>
	

</project>
